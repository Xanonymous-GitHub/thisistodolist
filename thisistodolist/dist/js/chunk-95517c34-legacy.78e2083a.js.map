{"version":3,"sources":["webpack:///../../../src/components/VProgressCircular/VProgressCircular.ts","webpack:///../../../src/components/VCard/index.ts","webpack:///../../../src/components/VSwitch/VSwitch.ts","webpack:///../../../src/directives/touch/index.ts","webpack:///./src/components/Settings.vue?2734","webpack:///src/components/Settings.vue","webpack:///./src/components/Settings.vue?87e4","webpack:///./src/components/Settings.vue","webpack:///../../../src/mixins/rippleable/index.ts","webpack:///../../../src/mixins/comparable/index.ts","webpack:///../../../src/mixins/selectable/index.ts"],"names":["name","props","button","indeterminate","rotate","type","Number","default","size","width","value","data","radius","computed","calculatedSize","this","circumference","Math","classes","normalizedValue","parseFloat","strokeDashArray","strokeDashOffset","strokeWidth","styles","height","svgStyles","transform","viewBoxSize","methods","genCircle","$createElement","class","attrs","fill","cx","cy","r","offset","genSvg","children","style","xmlns","viewBox","genInfo","staticClass","$slots","render","h","setTextColor","role","undefined","on","$listeners","VCardActions","VCardSubtitle","VCardText","VCardTitle","directives","Touch","inset","loading","Boolean","flat","String","validationState","hasError","hasColor","switchData","themeClasses","genDefaultSlot","genSwitch","genInput","attrs$","genRipple","left","right","onSwipeRight","genProgress","progress","color","onSwipeLeft","onChange","onKeydown","e","handleGesture","wrapper","touchendY","dirRatio","minDistance","touchendX","touchstartX","touchstartY","touch","event","Object","createHandlers","touchmoveX","touchmoveY","offsetX","offsetY","up","down","start","move","end","touchstart","touchend","touchmove","inserted","binding","target","el","options","passive","handlers","vnode","eventName","unbind","_vm","_h","_c","_self","_v","config","darkmode","changeDisplayMode","model","callback","$$v","expression","staticRenderFns","beforeCreate","$store","dispatch","$nextTick","$vuetify","theme","dark","mounted","component","VCard","VCol","VContainer","VRow","VSwitch","ripple","center","click","valueComparator","mixins","prop","id","inputValue","falseValue","trueValue","multiple","label","lazyValue","computedColor","isDark","isMultiple","Array","isActive","input","item","isDirty","watch","genLabel","VInput","disabled","domProps","checked","blur","change","focus","keydown","ref","onBlur","length","onFocus"],"mappings":"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","file":"js/chunk-95517c34-legacy.78e2083a.js","sourcesContent":["// Styles\nimport './VProgressCircular.sass'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\n\n// Utils\nimport { convertToUnit } from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeChildren } from 'vue'\n\n/* @vue/component */\nexport default Colorable.extend({\n  name: 'v-progress-circular',\n\n  props: {\n    button: Boolean,\n    indeterminate: Boolean,\n    rotate: {\n      type: [Number, String],\n      default: 0,\n    },\n    size: {\n      type: [Number, String],\n      default: 32,\n    },\n    width: {\n      type: [Number, String],\n      default: 4,\n    },\n    value: {\n      type: [Number, String],\n      default: 0,\n    },\n  },\n\n  data: () => ({\n    radius: 20,\n  }),\n\n  computed: {\n    calculatedSize (): number {\n      return Number(this.size) + (this.button ? 8 : 0)\n    },\n\n    circumference (): number {\n      return 2 * Math.PI * this.radius\n    },\n\n    classes (): object {\n      return {\n        'v-progress-circular--indeterminate': this.indeterminate,\n        'v-progress-circular--button': this.button,\n      }\n    },\n\n    normalizedValue (): number {\n      if (this.value < 0) {\n        return 0\n      }\n\n      if (this.value > 100) {\n        return 100\n      }\n\n      return parseFloat(this.value)\n    },\n\n    strokeDashArray (): number {\n      return Math.round(this.circumference * 1000) / 1000\n    },\n\n    strokeDashOffset (): string {\n      return ((100 - this.normalizedValue) / 100) * this.circumference + 'px'\n    },\n\n    strokeWidth (): number {\n      return Number(this.width) / +this.size * this.viewBoxSize * 2\n    },\n\n    styles (): object {\n      return {\n        height: convertToUnit(this.calculatedSize),\n        width: convertToUnit(this.calculatedSize),\n      }\n    },\n\n    svgStyles (): object {\n      return {\n        transform: `rotate(${Number(this.rotate)}deg)`,\n      }\n    },\n\n    viewBoxSize (): number {\n      return this.radius / (1 - Number(this.width) / +this.size)\n    },\n  },\n\n  methods: {\n    genCircle (name: string, offset: string | number): VNode {\n      return this.$createElement('circle', {\n        class: `v-progress-circular__${name}`,\n        attrs: {\n          fill: 'transparent',\n          cx: 2 * this.viewBoxSize,\n          cy: 2 * this.viewBoxSize,\n          r: this.radius,\n          'stroke-width': this.strokeWidth,\n          'stroke-dasharray': this.strokeDashArray,\n          'stroke-dashoffset': offset,\n        },\n      })\n    },\n    genSvg (): VNode {\n      const children = [\n        this.indeterminate || this.genCircle('underlay', 0),\n        this.genCircle('overlay', this.strokeDashOffset),\n      ] as VNodeChildren\n\n      return this.$createElement('svg', {\n        style: this.svgStyles,\n        attrs: {\n          xmlns: 'http://www.w3.org/2000/svg',\n          viewBox: `${this.viewBoxSize} ${this.viewBoxSize} ${2 * this.viewBoxSize} ${2 * this.viewBoxSize}`,\n        },\n      }, children)\n    },\n    genInfo (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-progress-circular__info',\n      }, this.$slots.default)\n    },\n  },\n\n  render (h): VNode {\n    return h('div', this.setTextColor(this.color, {\n      staticClass: 'v-progress-circular',\n      attrs: {\n        role: 'progressbar',\n        'aria-valuemin': 0,\n        'aria-valuemax': 100,\n        'aria-valuenow': this.indeterminate ? undefined : this.normalizedValue,\n      },\n      class: this.classes,\n      style: this.styles,\n      on: this.$listeners,\n    }), [\n      this.genSvg(),\n      this.genInfo(),\n    ])\n  },\n})\n","import VCard from './VCard'\nimport { createSimpleFunctional } from '../../util/helpers'\n\nconst VCardActions = createSimpleFunctional('v-card__actions')\nconst VCardSubtitle = createSimpleFunctional('v-card__subtitle')\nconst VCardText = createSimpleFunctional('v-card__text')\nconst VCardTitle = createSimpleFunctional('v-card__title')\n\nexport {\n  VCard,\n  VCardActions,\n  VCardSubtitle,\n  VCardText,\n  VCardTitle,\n}\n\nexport default {\n  $_vuetify_subcomponents: {\n    VCard,\n    VCardActions,\n    VCardSubtitle,\n    VCardText,\n    VCardTitle,\n  },\n}\n","// Styles\nimport '../../styles/components/_selection-controls.sass'\nimport './VSwitch.sass'\n\n// Mixins\nimport Selectable from '../../mixins/selectable'\nimport VInput from '../VInput'\n\n// Directives\nimport Touch from '../../directives/touch'\n\n// Components\nimport { VFabTransition } from '../transitions'\nimport VProgressCircular from '../VProgressCircular/VProgressCircular'\n\n// Helpers\nimport { keyCodes } from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeData } from 'vue'\n\n/* @vue/component */\nexport default Selectable.extend({\n  name: 'v-switch',\n\n  directives: { Touch },\n\n  props: {\n    inset: Boolean,\n    loading: {\n      type: [Boolean, String],\n      default: false,\n    },\n    flat: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VInput.options.computed.classes.call(this),\n        'v-input--selection-controls v-input--switch': true,\n        'v-input--switch--flat': this.flat,\n        'v-input--switch--inset': this.inset,\n      }\n    },\n    attrs (): object {\n      return {\n        'aria-checked': String(this.isActive),\n        'aria-disabled': String(this.disabled),\n        role: 'switch',\n      }\n    },\n    // Do not return undefined if disabled,\n    // according to spec, should still show\n    // a color when disabled and active\n    validationState (): string | undefined {\n      if (this.hasError && this.shouldValidate) return 'error'\n      if (this.hasSuccess) return 'success'\n      if (this.hasColor !== null) return this.computedColor\n      return undefined\n    },\n    switchData (): VNodeData {\n      return this.setTextColor(this.loading ? undefined : this.validationState, {\n        class: this.themeClasses,\n      })\n    },\n  },\n\n  methods: {\n    genDefaultSlot (): (VNode | null)[] {\n      return [\n        this.genSwitch(),\n        this.genLabel(),\n      ]\n    },\n    genSwitch (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-input--selection-controls__input',\n      }, [\n        this.genInput('checkbox', {\n          ...this.attrs,\n          ...this.attrs$,\n        }),\n        this.genRipple(this.setTextColor(this.validationState, {\n          directives: [{\n            name: 'touch',\n            value: {\n              left: this.onSwipeLeft,\n              right: this.onSwipeRight,\n            },\n          }],\n        })),\n        this.$createElement('div', {\n          staticClass: 'v-input--switch__track',\n          ...this.switchData,\n        }),\n        this.$createElement('div', {\n          staticClass: 'v-input--switch__thumb',\n          ...this.switchData,\n        }, [this.genProgress()]),\n      ])\n    },\n    genProgress (): VNode {\n      return this.$createElement(VFabTransition, {}, [\n        this.loading === false\n          ? null\n          : this.$slots.progress || this.$createElement(VProgressCircular, {\n            props: {\n              color: (this.loading === true || this.loading === '')\n                ? (this.color || 'primary')\n                : this.loading,\n              size: 16,\n              width: 2,\n              indeterminate: true,\n            },\n          }),\n      ])\n    },\n    onSwipeLeft () {\n      if (this.isActive) this.onChange()\n    },\n    onSwipeRight () {\n      if (!this.isActive) this.onChange()\n    },\n    onKeydown (e: KeyboardEvent) {\n      if (\n        (e.keyCode === keyCodes.left && this.isActive) ||\n        (e.keyCode === keyCodes.right && !this.isActive)\n      ) this.onChange()\n    },\n  },\n})\n","import { VNodeDirective, VNode } from 'vue/types/vnode'\nimport { keys } from '../../util/helpers'\n\nexport interface TouchStoredHandlers {\n  touchstart: (e: TouchEvent) => void\n  touchend: (e: TouchEvent) => void\n  touchmove: (e: TouchEvent) => void\n}\n\ninterface TouchHandlers {\n  start?: (wrapperEvent: TouchEvent & TouchWrapper) => void\n  end?: (wrapperEvent: TouchEvent & TouchWrapper) => void\n  move?: (wrapperEvent: TouchEvent & TouchWrapper) => void\n  left?: (wrapper: TouchWrapper) => void\n  right?: (wrapper: TouchWrapper) => void\n  up?: (wrapper: TouchWrapper) => void\n  down?: (wrapper: TouchWrapper) => void\n}\n\nexport interface TouchWrapper extends TouchHandlers {\n  touchstartX: number\n  touchstartY: number\n  touchmoveX: number\n  touchmoveY: number\n  touchendX: number\n  touchendY: number\n  offsetX: number\n  offsetY: number\n}\n\ninterface TouchVNodeDirective extends VNodeDirective {\n  value?: TouchHandlers & {\n    parent?: boolean\n    options?: AddEventListenerOptions\n  }\n}\n\nconst handleGesture = (wrapper: TouchWrapper) => {\n  const { touchstartX, touchendX, touchstartY, touchendY } = wrapper\n  const dirRatio = 0.5\n  const minDistance = 16\n  wrapper.offsetX = touchendX - touchstartX\n  wrapper.offsetY = touchendY - touchstartY\n\n  if (Math.abs(wrapper.offsetY) < dirRatio * Math.abs(wrapper.offsetX)) {\n    wrapper.left && (touchendX < touchstartX - minDistance) && wrapper.left(wrapper)\n    wrapper.right && (touchendX > touchstartX + minDistance) && wrapper.right(wrapper)\n  }\n\n  if (Math.abs(wrapper.offsetX) < dirRatio * Math.abs(wrapper.offsetY)) {\n    wrapper.up && (touchendY < touchstartY - minDistance) && wrapper.up(wrapper)\n    wrapper.down && (touchendY > touchstartY + minDistance) && wrapper.down(wrapper)\n  }\n}\n\nfunction touchstart (event: TouchEvent, wrapper: TouchWrapper) {\n  const touch = event.changedTouches[0]\n  wrapper.touchstartX = touch.clientX\n  wrapper.touchstartY = touch.clientY\n\n  wrapper.start &&\n    wrapper.start(Object.assign(event, wrapper))\n}\n\nfunction touchend (event: TouchEvent, wrapper: TouchWrapper) {\n  const touch = event.changedTouches[0]\n  wrapper.touchendX = touch.clientX\n  wrapper.touchendY = touch.clientY\n\n  wrapper.end &&\n    wrapper.end(Object.assign(event, wrapper))\n\n  handleGesture(wrapper)\n}\n\nfunction touchmove (event: TouchEvent, wrapper: TouchWrapper) {\n  const touch = event.changedTouches[0]\n  wrapper.touchmoveX = touch.clientX\n  wrapper.touchmoveY = touch.clientY\n\n  wrapper.move && wrapper.move(Object.assign(event, wrapper))\n}\n\nfunction createHandlers (value: TouchHandlers): TouchStoredHandlers {\n  const wrapper = {\n    touchstartX: 0,\n    touchstartY: 0,\n    touchendX: 0,\n    touchendY: 0,\n    touchmoveX: 0,\n    touchmoveY: 0,\n    offsetX: 0,\n    offsetY: 0,\n    left: value.left,\n    right: value.right,\n    up: value.up,\n    down: value.down,\n    start: value.start,\n    move: value.move,\n    end: value.end,\n  }\n\n  return {\n    touchstart: (e: TouchEvent) => touchstart(e, wrapper),\n    touchend: (e: TouchEvent) => touchend(e, wrapper),\n    touchmove: (e: TouchEvent) => touchmove(e, wrapper),\n  }\n}\n\nfunction inserted (el: HTMLElement, binding: TouchVNodeDirective, vnode: VNode) {\n  const value = binding.value!\n  const target = value.parent ? el.parentElement : el\n  const options = value.options || { passive: true }\n\n  // Needed to pass unit tests\n  if (!target) return\n\n  const handlers = createHandlers(binding.value!)\n  target._touchHandlers = Object(target._touchHandlers)\n  target._touchHandlers![vnode.context!._uid] = handlers\n\n  keys(handlers).forEach(eventName => {\n    target.addEventListener(eventName, handlers[eventName] as EventListener, options)\n  })\n}\n\nfunction unbind (el: HTMLElement, binding: TouchVNodeDirective, vnode: VNode) {\n  const target = binding.value!.parent ? el.parentElement : el\n  if (!target || !target._touchHandlers) return\n\n  const handlers = target._touchHandlers[vnode.context!._uid]\n  keys(handlers).forEach(eventName => {\n    target.removeEventListener(eventName, handlers[eventName])\n  })\n  delete target._touchHandlers[vnode.context!._uid]\n}\n\nexport const Touch = {\n  inserted,\n  unbind,\n}\n\nexport default Touch\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-card',{staticClass:\"ma-3\",attrs:{\"flat\":\"\"}},[_c('v-card-text',[_c('v-card-title',[_c('b',{staticClass:\"v-size--x-large\"},[_vm._v(\"ThisIsToDoList 設定\")])]),_c('v-container',{attrs:{\"fluid\":\"\"}},[_c('v-row',[_c('v-col',{attrs:{\"cols\":\"12\",\"sm\":\"4\",\"md\":\"4\"}},[_c('v-switch',{attrs:{\"label\":\"深色模式\",\"color\":\"red\",\"value\":_vm.config.darkmode,\"hide-details\":\"\"},on:{\"change\":_vm.changeDisplayMode},model:{value:(_vm.darkmode),callback:function ($$v) {_vm.darkmode=$$v},expression:\"darkmode\"}})],1)],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-card flat class=\"ma-3\">\n    <v-card-text>\n      <v-card-title>\n        <b class=\"v-size--x-large\">ThisIsToDoList 設定</b>\n      </v-card-title>\n      <v-container fluid>\n        <v-row>\n          <v-col cols=\"12\" sm=\"4\" md=\"4\">\n            <v-switch\n              @change=\"changeDisplayMode\"\n              v-model=\"darkmode\"\n              label=\"深色模式\"\n              color=\"red\"\n              :value=\"config.darkmode\"\n              hide-details\n            />\n          </v-col>\n        </v-row>\n      </v-container>\n    </v-card-text>\n  </v-card>\n</template>\n\n<script>\nimport { mapGetters } from \"vuex\";\n\nexport default {\n  name: \"settings\",\n  data: () => ({\n    darkmode: true\n  }),\n  beforeCreate() {\n    this.$store.dispatch(\"setCurrentStatus\", \"set\");\n  },\n  methods: {\n    changeDisplayMode() {\n      this.$nextTick(() => {\n        this.$store.dispatch(\"changeConfig\", {\n          name: \"darkmode\",\n          value: this.darkmode\n        });\n      });\n      this.$vuetify.theme.dark = this.darkmode;\n    }\n  },\n  mounted() {\n    this.darkmode = this.config.darkmode;\n  },\n  computed: {\n    ...mapGetters({\n      config: \"getComponentConfig\"\n    })\n  }\n};\n</script>\n\n<style scoped />\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vuetify-loader/lib/loader.js??ref--20-0!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Settings.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vuetify-loader/lib/loader.js??ref--20-0!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Settings.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Settings.vue?vue&type=template&id=d6fa0530&scoped=true&\"\nimport script from \"./Settings.vue?vue&type=script&lang=js&\"\nexport * from \"./Settings.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"d6fa0530\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VCardText } from 'vuetify/lib/components/VCard';\nimport { VCardTitle } from 'vuetify/lib/components/VCard';\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VRow } from 'vuetify/lib/components/VGrid';\nimport { VSwitch } from 'vuetify/lib/components/VSwitch';\ninstallComponents(component, {VCard,VCardText,VCardTitle,VCol,VContainer,VRow,VSwitch})\n","// Directives\nimport ripple from '../../directives/ripple'\n\n// Types\nimport Vue, { VNode, VNodeData, VNodeDirective } from 'vue'\n\nexport default Vue.extend({\n  name: 'rippleable',\n\n  directives: { ripple },\n\n  props: {\n    ripple: {\n      type: [Boolean, Object],\n      default: true,\n    },\n  },\n\n  methods: {\n    genRipple (data: VNodeData = {}): VNode | null {\n      if (!this.ripple) return null\n\n      data.staticClass = 'v-input--selection-controls__ripple'\n\n      data.directives = data.directives || []\n      data.directives.push({\n        name: 'ripple',\n        value: { center: true },\n      } as VNodeDirective)\n      data.on = Object.assign({\n        click: this.onChange,\n      }, this.$listeners)\n\n      return this.$createElement('div', data)\n    },\n    onChange () {},\n  },\n})\n","import Vue from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { deepEqual } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'comparable',\n  props: {\n    valueComparator: {\n      type: Function,\n      default: deepEqual,\n    } as any as PropValidator<typeof deepEqual>,\n  },\n})\n","// Components\nimport VInput from '../../components/VInput'\n\n// Mixins\nimport Rippleable from '../rippleable'\nimport Comparable from '../comparable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n/* @vue/component */\nexport default mixins(\n  VInput,\n  Rippleable,\n  Comparable\n).extend({\n  name: 'selectable',\n\n  model: {\n    prop: 'inputValue',\n    event: 'change',\n  },\n\n  props: {\n    id: String,\n    inputValue: null as any,\n    falseValue: null as any,\n    trueValue: null as any,\n    multiple: {\n      type: Boolean,\n      default: null,\n    },\n    label: String,\n  },\n\n  data () {\n    return {\n      hasColor: this.inputValue,\n      lazyValue: this.inputValue,\n    }\n  },\n\n  computed: {\n    computedColor (): string | undefined {\n      if (!this.isActive) return undefined\n      if (this.color) return this.color\n      if (this.isDark && !this.appIsDark) return 'white'\n      return 'accent'\n    },\n    isMultiple (): boolean {\n      return this.multiple === true || (this.multiple === null && Array.isArray(this.internalValue))\n    },\n    isActive (): boolean {\n      const value = this.value\n      const input = this.internalValue\n\n      if (this.isMultiple) {\n        if (!Array.isArray(input)) return false\n\n        return input.some(item => this.valueComparator(item, value))\n      }\n\n      if (this.trueValue === undefined || this.falseValue === undefined) {\n        return value\n          ? this.valueComparator(value, input)\n          : Boolean(input)\n      }\n\n      return this.valueComparator(input, this.trueValue)\n    },\n    isDirty (): boolean {\n      return this.isActive\n    },\n  },\n\n  watch: {\n    inputValue (val) {\n      this.lazyValue = val\n      this.hasColor = val\n    },\n  },\n\n  methods: {\n    genLabel () {\n      const label = VInput.options.methods.genLabel.call(this)\n\n      if (!label) return label\n\n      label!.data!.on = {\n        click: (e: Event) => {\n          // Prevent label from\n          // causing the input\n          // to focus\n          e.preventDefault()\n\n          this.onChange()\n        },\n      }\n\n      return label\n    },\n    genInput (type: string, attrs: object) {\n      return this.$createElement('input', {\n        attrs: Object.assign({\n          'aria-checked': this.isActive.toString(),\n          disabled: this.isDisabled,\n          id: this.computedId,\n          role: type,\n          type,\n        }, attrs),\n        domProps: {\n          value: this.value,\n          checked: this.isActive,\n        },\n        on: {\n          blur: this.onBlur,\n          change: this.onChange,\n          focus: this.onFocus,\n          keydown: this.onKeydown,\n        },\n        ref: 'input',\n      })\n    },\n    onBlur () {\n      this.isFocused = false\n    },\n    onChange () {\n      if (this.isDisabled) return\n\n      const value = this.value\n      let input = this.internalValue\n\n      if (this.isMultiple) {\n        if (!Array.isArray(input)) {\n          input = []\n        }\n\n        const length = input.length\n\n        input = input.filter((item: any) => !this.valueComparator(item, value))\n\n        if (input.length === length) {\n          input.push(value)\n        }\n      } else if (this.trueValue !== undefined && this.falseValue !== undefined) {\n        input = this.valueComparator(input, this.trueValue) ? this.falseValue : this.trueValue\n      } else if (value) {\n        input = this.valueComparator(input, value) ? null : value\n      } else {\n        input = !input\n      }\n\n      this.validate(true, input)\n      this.internalValue = input\n      this.hasColor = input\n    },\n    onFocus () {\n      this.isFocused = true\n    },\n    /** @abstract */\n    onKeydown (e: Event) {},\n  },\n})\n"],"sourceRoot":""}